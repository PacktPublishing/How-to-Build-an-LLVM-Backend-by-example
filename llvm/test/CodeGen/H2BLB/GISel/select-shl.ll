; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple h2blb--darwin -global-isel=1 -global-isel-abort=1 -o - %s | FileCheck %s

define i16 @shli16(i16 %a, i16 %b) {
; CHECK-LABEL: shli16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    shl16 r1, r1, r2
; CHECK-NEXT:    ret
  %res = shl i16 %a, %b
  ret i16 %res
}

define i16 @shli16Imm(i16 %a) {
; CHECK-LABEL: shli16Imm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ldi16 r2, 6
; CHECK-NEXT:    shl16 r1, r1, r2
; CHECK-NEXT:    ret
  %res = shl i16 %a, 6
  ret i16 %res
}

define i32 @shli32(i32 %a, i32 %b) {
; CHECK-LABEL: shli32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subsp sp, sp, 4
; CHECK-NEXT:    strsp32 d2, sp, 0 # 4-byte Folded Spill
; CHECK-NEXT:    ldrsp32 d2, sp, 4
; CHECK-NEXT:    shl32 d1, d1, r4
; CHECK-NEXT:    ldrsp32 d2, sp, 0 # 4-byte Folded Reload
; CHECK-NEXT:    addsp sp, sp, 4
; CHECK-NEXT:    ret
  %res = shl i32 %a, %b
  ret i32 %res
}

define i32 @shli32Imm(i32 %a) {
; CHECK-LABEL: shli32Imm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subsp sp, sp, 4
; CHECK-NEXT:    strsp32 d2, sp, 0 # 4-byte Folded Spill
; CHECK-NEXT:    ldi32 d2, 6
; CHECK-NEXT:    shl32 d1, d1, r4
; CHECK-NEXT:    ldrsp32 d2, sp, 0 # 4-byte Folded Reload
; CHECK-NEXT:    addsp sp, sp, 4
; CHECK-NEXT:    ret
  %res = shl i32 %a, 6
  ret i32 %res
}
