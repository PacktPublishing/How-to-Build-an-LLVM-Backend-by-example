; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -o - %s -fast-isel=0  -mtriple h2blb |FileCheck %s

; We make the load volatile because otherwise SDISel optimize it away since it
; knows we are loading the value that we just stored.
define i16 @alloca16(i16 %val) {
; CHECK-LABEL: alloca16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subsp sp, sp, 2
; CHECK-NEXT:    strsp16 r1, sp, 0
; CHECK-NEXT:    ldrsp16 r1, sp, 0
; CHECK-NEXT:    addsp sp, sp, 2
; CHECK-NEXT:    ret
  %ptr = alloca i16
  store i16 %val, ptr %ptr
  %res = load volatile i16, ptr %ptr
  ret i16 %res
}

define i32 @alloca32(i32 %val) {
; CHECK-LABEL: alloca32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subsp sp, sp, 4
; CHECK-NEXT:    strsp32 d1, sp, 0
; CHECK-NEXT:    ldrsp32 d1, sp, 0
; CHECK-NEXT:    addsp sp, sp, 4
; CHECK-NEXT:    ret
  %ptr = alloca i32
  store i32 %val, ptr %ptr
  %res = load volatile i32, ptr %ptr
  ret i32 %res
}
