# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py UTC_ARGS: --version 5
# RUN: llc -run-pass=regbankselect %s  -o - -mtriple h2blb--darwin | FileCheck %s
# The test is not interesting as in all registers must be assigned
# to our unique GPRB bank.
# However, it provides coverage on both the static and dynamic tables
# of the register mappings implemented in our register bank info class.
---
name: regBank
legalized:       true
regBankSelected: false
tracksRegLiveness: true
stack:
  - { id: 0, size: 4, alignment: 4 }
body: |
  bb.0:
    ; CHECK-LABEL: name: regBank
    ; CHECK: [[FRAME_INDEX:%[0-9]+]]:gprb(p0) = G_FRAME_INDEX %stack.0
    ; CHECK-NEXT: [[SEXTLOAD:%[0-9]+]]:gprb(s16) = G_SEXTLOAD [[FRAME_INDEX]](p0) :: (load (s8))
    ; CHECK-NEXT: [[PTR_ADD:%[0-9]+]]:gprb(p0) = G_PTR_ADD [[FRAME_INDEX]], [[SEXTLOAD]](s16)
    ; CHECK-NEXT: [[LOAD:%[0-9]+]]:gprb(s32) = G_LOAD [[PTR_ADD]](p0) :: (load (s32))
    ; CHECK-NEXT: [[ADD:%[0-9]+]]:gprb(s32) = G_ADD [[LOAD]], [[LOAD]]
    ; CHECK-NEXT: $d1 = COPY [[ADD]](s32)
    ; CHECK-NEXT: RET_PSEUDO implicit $d1
    %0:_(p0) = G_FRAME_INDEX %stack.0
    %1:_(s16) = G_SEXTLOAD %0(p0) :: (load (s8))
    %2:_(p0) = G_PTR_ADD %0, %1(s16)
    %3:_(s32) = G_LOAD %2(p0) :: (load (s32))
    %4:_(s32) = G_ADD %3, %3
    $d1 = COPY %4(s32)
    RET_PSEUDO implicit $d1
...
