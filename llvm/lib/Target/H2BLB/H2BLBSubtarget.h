//===- H2BLBSubtarget.h - Define Subtarget for the H2BLB ----*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file declares the H2BLB specific subclass of TargetSubtarget.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_H2BLB_H2BLBSUBTARGET_H
#define LLVM_LIB_TARGET_H2BLB_H2BLBSUBTARGET_H

#include "H2BLBFrameLowering.h"
#include "H2BLBISelLowering.h"
#include "H2BLBInstrInfo.h"
#include "H2BLBRegisterInfo.h"
#include "llvm/ADT/StringRef.h"
#include "llvm/CodeGen/GlobalISel/CallLowering.h"
#include "llvm/CodeGen/GlobalISel/LegalizerInfo.h"
#include "llvm/CodeGen/RegisterBankInfo.h"
#include "llvm/CodeGen/SelectionDAGTargetInfo.h"
#include "llvm/CodeGen/TargetSubtargetInfo.h"

#define GET_SUBTARGETINFO_HEADER
#include "H2BLBGenSubtargetInfo.inc"
namespace llvm {

class TargetMachine;
class Triple;

class H2BLBSubtarget : public H2BLBGenSubtargetInfo {
  virtual void anchor();
  H2BLBFrameLowering FrameLowering;
  H2BLBInstrInfo InstrInfo;
  H2BLBRegisterInfo RegisterInfo;
  H2BLBTargetLowering TLInfo;
  SelectionDAGTargetInfo SDTgtInfo;

  /// GlobalISel related APIs.
  std::unique_ptr<CallLowering> CallLoweringInfo;
  std::unique_ptr<LegalizerInfo> Legalizer;
  std::unique_ptr<RegisterBankInfo> RegBankInfo;

public:
  H2BLBSubtarget(const Triple &TT, StringRef CPU, StringRef FS,
                 const TargetMachine &TM);
  const H2BLBInstrInfo *getInstrInfo() const override { return &InstrInfo; }
  const H2BLBFrameLowering *getFrameLowering() const override {
    return &FrameLowering;
  }
  const H2BLBRegisterInfo *getRegisterInfo() const override {
    return &RegisterInfo;
  }
  const H2BLBTargetLowering *getTargetLowering() const override {
    return &TLInfo;
  }

  const SelectionDAGTargetInfo *getSelectionDAGInfo() const override {
    return &SDTgtInfo;
  }

  const CallLowering *getCallLowering() const override;
  const LegalizerInfo *getLegalizerInfo() const override;
  const RegisterBankInfo *getRegBankInfo() const override;

  /// Parses features string setting specified subtarget options.
  /// Definition of function is auto generated by tblgen.
  void ParseSubtargetFeatures(StringRef CPU, StringRef TuneCPU, StringRef FS);
};

} // end namespace llvm

#endif // LLVM_LIB_TARGET_H2BLB_H2BLBSUBTARGET_H
