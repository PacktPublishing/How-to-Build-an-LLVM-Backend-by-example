//===-- H2BLBInstPrinter.h - Convert H2BLB MCInst to assembly syntax ------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This class prints an H2BLB MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_H2BLB_MCTARGETDESC_H2BLBINSTPRINTER_H
#define LLVM_LIB_TARGET_H2BLB_MCTARGETDESC_H2BLBINSTPRINTER_H

#include "MCTargetDesc/H2BLBMCTargetDesc.h"
#include "llvm/ADT/StringRef.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class H2BLBInstPrinter : public MCInstPrinter {
private:
  // Operand printer.
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printImm(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printRegName(raw_ostream &OS, MCRegister Reg) override;

public:
  H2BLBInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                   const MCRegisterInfo &MRI);

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t>
  getMnemonic(const MCInst &MI) const override;
  virtual void printInstruction(const MCInst *MI, uint64_t Address,
                                raw_ostream &O);
  virtual bool printAliasInstr(const MCInst *MI, uint64_t Address,
                               raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);
};

} // end namespace llvm

#endif // LLVM_LIB_TARGET_H2BLB_MCTARGETDESC_H2BLBINSTPRINTER_H
