; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple h2blb--darwin -o - %s -global-isel=1 -global-isel-abort=1 -verify-machineinstrs | FileCheck %s

define void @storei16(i16 %val, ptr %arg) {
; CHECK-LABEL: storei16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str16 r1, r2, 0
; CHECK-NEXT:    ret
  store i16 %val, ptr %arg
  ret void
}

define void @storei16PlusImm(i16 %val, ptr %arg) {
; CHECK-LABEL: storei16PlusImm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str16 r1, r2, 1
; CHECK-NEXT:    ret
  %addr = getelementptr i8, ptr %arg, i16 1
  store i16 %val, ptr %addr
  ret void
}

define void @storei16PlusRegOffset(i16 %val, ptr %arg, i16 %offset) {
; CHECK-LABEL: storei16PlusRegOffset:
; CHECK:       # %bb.0:
; CHECK-NEXT:    addi16 r2, r2, r3
; CHECK-NEXT:    str16 r1, r2, 0
; CHECK-NEXT:    ret
  %addr = getelementptr i8, ptr %arg, i16 %offset
  store i16 %val, ptr %addr
  ret void
}

; Check that we don't fold immediate that are too big to fit
; in the encoding space.
define void @storei32PlusTooBigImm(i16 %val, ptr %arg) {
; CHECK-LABEL: storei32PlusTooBigImm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ldi16 r3, 19
; CHECK-NEXT:    addi16 r2, r2, r3
; CHECK-NEXT:    str16 r1, r2, 0
; CHECK-NEXT:    ret
  %addr = getelementptr i8, ptr %arg, i16 19
  store i16 %val, ptr %addr
  ret void
}

define void @storei32(i32 %val, ptr %arg) {
; CHECK-LABEL: storei32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str32 d1, r1, 0
; CHECK-NEXT:    ret
  store i32 %val, ptr %arg
  ret void
}

define void @storei32PlusImm(i32 %val, ptr %arg) {
; CHECK-LABEL: storei32PlusImm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str32 d1, r1, 7
; CHECK-NEXT:    ret
  %addr = getelementptr i8, ptr %arg, i16 7
  store i32 %val, ptr %addr
  ret void
}

define void @truncstorei8(i16 %val, ptr %arg) {
; CHECK-LABEL: truncstorei8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    truncstr8 r1, r2, 0
; CHECK-NEXT:    ret
  %trunc = trunc i16 %val to i8
  store i8 %trunc, ptr %arg
  ret void
}

define void @truncstorei8PlusImm(i16 %val, ptr %arg) {
; CHECK-LABEL: truncstorei8PlusImm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    truncstr8 r1, r2, 7
; CHECK-NEXT:    ret
  %trunc = trunc i16 %val to i8
  %addr = getelementptr i8, ptr %arg, i16 7
  store i8 %trunc, ptr %addr
  ret void
}

define void @truncstorei16(i32 %val, ptr %arg) {
; CHECK-LABEL: truncstorei16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str16 r2, r1, 0
; CHECK-NEXT:    ret
  %trunc = trunc i32 %val to i16
  store i16 %trunc, ptr %arg
  ret void
}

define void @truncstorei16PlusImm(i32 %val, ptr %arg) {
; CHECK-LABEL: truncstorei16PlusImm:
; CHECK:       # %bb.0:
; CHECK-NEXT:    str16 r2, r1, 14
; CHECK-NEXT:    ret
  %trunc = trunc i32 %val to i16
  %addr = getelementptr i16, ptr %arg, i32 7
  store i16 %trunc, ptr %addr
  ret void
}
