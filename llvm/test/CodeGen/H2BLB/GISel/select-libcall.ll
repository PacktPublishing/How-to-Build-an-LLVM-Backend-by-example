; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 5
; RUN: llc -mtriple h2blb -o - %s -global-isel=1 -global-isel-abort=1 -verify-machineinstrs -enable-misched=false | FileCheck %s

; Check that we can lower floating point operation to a library call
define void @scalarizeAndCallLib(ptr %src, ptr %dst) {
; CHECK-LABEL: scalarizeAndCallLib:
; CHECK:       # %bb.0:
; CHECK-NEXT:    subsp sp, sp, 16
; CHECK-NEXT:    strsp32 d2, sp, 12 # 4-byte Folded Spill
; CHECK-NEXT:    strsp32 d3, sp, 8 # 4-byte Folded Spill
; CHECK-NEXT:    mov16 r4, r0
; CHECK-NEXT:    mov16 r5, r2
; CHECK-NEXT:    ldr32 d1, r1, 0
; CHECK-NEXT:    ldr32 d3, r1, 4
; CHECK-NEXT:    strsp32 d1, sp, 0
; CHECK-NEXT:    call __addsf3
; CHECK-NEXT:    strsp32 d1, sp, 4 # 4-byte Folded Spill
; CHECK-NEXT:    strsp32 d3, sp, 0
; CHECK-NEXT:    mov32 d1, d3
; CHECK-NEXT:    call __addsf3
; CHECK-NEXT:    ldrsp32 d0, sp, 4 # 4-byte Folded Reload
; CHECK-NEXT:    str32 d0, r5, 0
; CHECK-NEXT:    str32 d1, r5, 4
; CHECK-NEXT:    mov16 r0, r4
; CHECK-NEXT:    ldrsp32 d3, sp, 8 # 4-byte Folded Reload
; CHECK-NEXT:    ldrsp32 d2, sp, 12 # 4-byte Folded Reload
; CHECK-NEXT:    addsp sp, sp, 16
; CHECK-NEXT:    ret
  %val = load <2 x float>, ptr %src
  %res = fadd <2 x float> %val, %val
  store <2 x float> %res, ptr %dst
  ret void
}
